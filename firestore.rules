rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() {
      return request.auth != null;
    }

    function isAuthor() {
      return isSignedIn() && request.auth.uid == resource.data.authorId;
    }

    match /drops/{dropId} {
      allow read: if isSignedIn() && (resource.data.visibility == 'public' || isAuthor());

      allow create: if isSignedIn()
        && request.resource.data.authorId == request.auth.uid
        && request.resource.data.text is string
        && request.resource.data.text.size() > 0
        && request.resource.data.geohash is string
        && request.resource.data.visibility is string
        && request.resource.data.keys().hasOnly(['text', 'authorId', 'createdAt', 'visibility', 'location', 'geohash']);

      allow update, delete: if false;
    }
  }
}
